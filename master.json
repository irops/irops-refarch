{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This template deploys a VPC, with a pair of public and private subnets spread across two Availabilty Zones. It deploys an Internet Gateway, with a default route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), and default routes for them in the private subnets.  It then deploys a highly available ECS cluster using an AutoScaling Group, with ECS hosts distributed across multiple Availability Zones.  Finally, it deploys a pair of example ECS services from containers published in Amazon EC2 Container Registry (Amazon ECR).",

  "Resources" : {
    "VPC" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : "http://templates-irops.s3-website-us-west-2.amazonaws.com/ecs-refarch-cloudformation/infrastructure/vpc.json",
        "Parameters" : {
          "EnvironmentName" : { "Ref" : "AWS::StackName" },
          "VpcCIDR" : "10.180.0.0/16",
          "PublicSubnet1CIDR" : "10.180.8.0/21",
          "PublicSubnet2CIDR" : "10.180.16.0/21",
          "PrivateSubnet1CIDR" : "10.180.24.0/21",
          "PrivateSubnet2CIDR" : "10.180.32.0/21"
        }
      }
    },

    "SecurityGroups" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : "http://templates-irops.s3-website-us-west-2.amazonaws.com/ecs-refarch-cloudformation/infrastructure/security-groups.json",
        "Parameters" : {
          "EnvironmentName" : { "Ref" : "AWS::StackName" },
          "VPC" : { "Fn::GetAtt" : [ "VPC", "Outputs.VPC" ] }
        }
      }
    },

    "ALB" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : "http://templates-irops.s3-website-us-west-2.amazonaws.com/ecs-refarch-cloudformation/infrastructure/load-balancers.json",
        "Parameters" : {
          "EnvironmentName" : { "Ref" : "AWS::StackName" },
          "VPC" : { "Fn::GetAtt" : [ "VPC", "Outputs.VPC" ] },
          "Subnets" : { "Fn::GetAtt" : [ "VPC", "Outputs.PublicSubnets" ] },
          "SecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.LoadBalancerSecurityGroup" ] }
        }
      }
    },

    "ECS" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : "http://templates-irops.s3-website-us-west-2.amazonaws.com/ecs-refarch-cloudformation/infrastructure/ecs-cluster.json",
        "Parameters" : {
          "EnvironmentName" : { "Ref" : "AWS::StackName" },
          "InstanceType" : "t2.large",
          "ClusterSize" : "4",
          "VPC" : { "Fn::GetAtt" : [ "VPC", "Outputs.VPC" ] },
          "SecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.ECSHostSecurityGroup" ] },
          "Subnets" : { "Fn::GetAtt" : [ "VPC", "Outputs.PrivateSubnets" ] }
        }
      }
    },

    "ProductService" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : "http://templates-irops.s3-website-us-west-2.amazonaws.com/ecs-refarch-cloudformation/services/product-service/service.json",
        "Parameters" : {
          "VPC" : { "Fn::GetAtt" : [ "VPC", "Outputs.VPC" ] },
          "Cluster" : { "Fn::GetAtt" : [ "ECS", "Outputs.Cluster" ] },
          "DesiredCount" : "2",
          "Listener" : { "Fn::GetAtt" : [ "ALB", "Outputs.Listener" ] },
          "Path" : "/products"
        }
      }
    },

    "WebsiteService" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : "http://templates-irops.s3-website-us-west-2.amazonaws.com/ecs-refarch-cloudformation/services/website-service/service.json",
        "Parameters" : {
          "VPC" : { "Fn::GetAtt" : [ "VPC", "Outputs.VPC" ] },
          "Cluster" : { "Fn::GetAtt" : [ "ECS", "Outputs.Cluster" ] },
          "DesiredCount" : "2",
          "ProductServiceUrl" : { "Fn::Join" : [ "/", [ { "Fn::GetAtt" : [ "ALB", "Outputs.LoadBalancerUrl" ] }, "products" ]] },
          "Listener" : { " Fn::GetAtt" : [ "ALB", "Outputs.Listener" ] },
          "Path" : "/"
        }
      }
    }
  },

  "Outputs" : {
    "ProductServiceUrl" : {
      "Description" : "The URL endpoint for the product service",
      "Value" : { "Fn::Join" : [ "/", [ { "Fn::GetAtt" : [ "ALB", "Outputs.LoadBalancerUrl" ] }, "products" ]] }
    },

    "WebsiteServiceUrl" : {
      "Description" : "The URL endpoint for the website service",
      "Value" : { "Fn::Join" : [ "", [ { "Fn::GetAtt" : [ "ALB", "Outputs.LoadBalancerUrl" ] }, "/" ]] }
    }
  }
}
